/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package struts.action;

import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import struts.form.LoginForm;
import dao.Admin;
import dao.AdminDAO;
import dao.Student;
import dao.StudentDAO;
import dao.Teacher;
import dao.TeacherDAO;

/**
 * MyEclipse Struts Creation date: 01-03-2010
 * 
 * XDoclet definition:
 * 
 * @struts.action path="/login" name="loginForm" input="/login.jsp"
 *                scope="request" validate="true"
 * @struts.action-forward name="teacher" path="/teacher.jsp"
 * @struts.action-forward name="student" path="/student.jsp"
 * @struts.action-forward name="admin" path="/admin/manage.jsp"
 */
public class LoginAction extends Action
{
	/*
	 * Generated Methods
	 */

	/**
	 * Method execute
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
	{
		LoginForm loginForm = (LoginForm) form;// TODO Auto-generated method
		// stub
		String usertype = loginForm.getUsertype();
		String username = loginForm.getUsername();
		String password = loginForm.getPassword();

		if (usertype.equalsIgnoreCase("admin"))
		{
			AdminDAO dao = new AdminDAO();
			List list = dao.findByName(username);
			if (list.size() != 1)
			{
				return mapping.findForward(util.Constants.ERROR);
			}

			Admin admin = (Admin) list.get(0);
			if (admin.getPassword().equals(password))// success
			{
				request.getSession().setAttribute("user", admin);
				request.setAttribute("usertype", usertype);
				return mapping.findForward("admin");
			} else
			// wrong password
			{
				return mapping.findForward("wrongpassword");
			}
		}

		else if (usertype.equalsIgnoreCase("student"))
		{
			StudentDAO dao = new StudentDAO();
			List list = dao.findByName(username);
			if (list.size() != 1)
			{
				return mapping.findForward("wrongpassword");
			}

			Student user = (Student) list.get(0);
			if (user.getPassword().equals(password))
			{
				request.getSession().setAttribute("user", user);
				request.getSession().setAttribute("usertype", usertype);
				return mapping.findForward("student");
			} else
			// wrong password
			{
				return mapping.findForward("wrongpassword");
			}

		}

		else if (usertype.equalsIgnoreCase("teacher"))
		{
			TeacherDAO dao = new TeacherDAO();
			List list = dao.findByName(username);
			if (list.size() != 1)
			{
				return mapping.findForward("wrongpassword");
			}

			Teacher user = (Teacher) list.get(0);
			if (user.getPassword().equals(password))
			{
				request.getSession().setAttribute("user", user);
				request.getSession().setAttribute("usertype", usertype);
				return mapping.findForward("teacher");
			} else
			// wrong password
			{
				return mapping.findForward("wrongpassword");
			}
		}
		return null;
	}
}